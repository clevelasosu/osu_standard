<?php

use Drupal\Core\Config\FileStorage;
use Drupal\shortcut\Entity\Shortcut;
use Drupal\user\Entity\User;

/**
 * Implements hook_install().
 */
function osu_standard_install($is_syncing) {
  // Assign user 1 the "administrator" role.
  /** @var \Drupal\user\Entity\User $user */
  $user = User::load(1);
  $user->roles[] = 'administrator';
  $user->save();

  // Populate the default shortcut set.
  $shortcut = Shortcut::create([
    'shortcut_set' => 'default',
    'title' => t('Add content'),
    'weight' => -20,
    'link' => ['uri' => 'internal:/node/add'],
  ]);
  $shortcut->save();

  $shortcut = Shortcut::create([
    'shortcut_set' => 'default',
    'title' => t('All content'),
    'weight' => -19,
    'link' => ['uri' => 'internal:/admin/content'],
  ]);
  $shortcut->save();
  // Set Page cache to a year.
  $page_cache = \Drupal::configFactory()->getEditable('system.performance');
  $page_cache->set('cache.page.max_age', 31536000);
  $page_cache->save();

  // Install modules that have requirements on fields etc.
  //  \Drupal::service('module_installer')->install([
  //    'osu_groups',
  //    'osu_groups_basic_group',
  //  ], TRUE);
}

/**
 * Install and Configure metatag.
 */
function osu_standard_update_8003() {
  \Drupal::service('module_installer')->install([
    'metatag',
    'metatag_google_cse',
    'metatag_open_graph',
    'metatag_twitter_cards',
    'metatag_verification',
    'metatag_views',
  ], TRUE);
  $install_profile_path = \Drupal::service('module_handler')
    ->getModule('osu_standard')
    ->getPath();
  $config_path = realpath($install_profile_path . '/config/install');
  $config_storage = \Drupal::service('config.storage');
  $source = new FileStorage($config_path);
  $metatag_defaults = glob($config_path . '/metatag.metatag_defaults.*.yml');
  foreach ($metatag_defaults as $metatag_default) {
    $metatag_config_name = basename($metatag_default, '.yml');
    $config_storage->write($metatag_config_name, $source->read($metatag_config_name));
  }
  return t('Installed new modules, Seckit and OSU Seckit');
}

/**
 * Enable OSU Seckit module.
 */
function osu_standard_update_8002() {
  \Drupal::service('module_installer')->install([
    'seckit',
    'osu_seckit',
  ], TRUE);
  return t('Installed new modules, Seckit and OSU Seckit');
}

/**
 * Update CAS Settings on existing sites.
 */
function osu_standard_update_8001() {
  $config_factory = \Drupal::configFactory();
  $cas_settings = $config_factory->getEditable('cas.settings');
  $cas_server_settings = $cas_settings->get('server');
  $cas_server_settings['path'] = '/idp/profile/cas';
  $cas_settings->set('server', $cas_server_settings);
  $cas_settings->save(TRUE);

  $cas_attributes = $config_factory->getEditable('cas_attributes.settings');
  $cas_attributes_fields = $cas_attributes->get('field');
  $cas_attributes_fields['mappings'] = [
    "name" => "[cas:attribute:givenName] [cas:attribute:surname]",
    "mail" => "[cas:attribute:osuprimarymail]",
  ];
  $cas_attributes->set('field', $cas_attributes_fields);

  $cas_attributes_roles = $cas_attributes->get('role');
  if (count($cas_attributes_roles['mappings']) == 0) {
    $cas_attributes_roles['mappings'] = [
      [
        "rid" => "administrator",
        "attribute" => "entitlement_drupal",
        "value" => "urn:mace:oregonstate.edu:entitlement:drupal-admin",
        "method" => "exact_any",
        "negate" => FALSE,
        "remove_without_match" => TRUE,
      ],
    ];
  }
  $cas_attributes->set('role', $cas_attributes_roles);
  $cas_attributes->save(TRUE);

}
